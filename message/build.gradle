if (ISDEBUG.toBoolean()) {
    apply plugin: 'com.android.application'
}else{
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        if (ISDEBUG.toBoolean()) {
            applicationId "com.onion.message"
        }
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode UTIL_VERSION_CODE.toInteger()
        versionName UTIL_VERSION_NAME.toString()

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86_64", "x86"
        }

        manifestPlaceholders = [
                GETUI_APP_ID    : "nNou72n9F7Aqk3TPc5NaT7",
                GETUI_APP_KEY   : "2Tn4QalAgsA3zKnh8BVWv9",
                GETUI_APP_SECRET: "hM7ERPeX9v9j5JgQ017xN1"
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (ISDEBUG.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
            }
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    dataBinding{
        enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    annotationProcessor rootProject.ext.dependencies["ARouter-Compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-processor"]
    api project(':base')
    api project(':push')

}
